# Generated by Django 3.0.8 on 2020-07-04 08:01

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('overview', models.TextField()),
                ('category', models.CharField(choices=[('Educate', 'Educate'), ('News & Media', 'News & Media'), ('Seminars', 'Seminars'), ('Case Studies', 'Case Studies'), ('Articles', 'Articles')], default='Articles', max_length=50)),
                ('body', models.TextField(default='Welcome')),
                ('allowcomments', models.BooleanField(default=True)),
                ('noofcomments', models.IntegerField(default=0)),
                ('createdon', models.DateTimeField(auto_now=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['createdon'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('createdon', models.DateTimeField(auto_now_add=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BlogPost')),
            ],
        ),
    ]
